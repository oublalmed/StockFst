/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetfst;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Hp
 */
public class Inventaire extends javax.swing.JFrame {

    /**
     * Creates new form Inventaire
     */
    public Inventaire() {
        initComponents();
        RemplirCmbMois();
        RemplirCmbAnnée();
        RemplirComboIDClient();
    }
    
    public Connection connecter(){
     
     String url ="jdbc:mysql://localhost:3306/gestionmagasin?zeroDateTimeBehavior=convertToNull";
     Connection cn;
     String user="root";
     String password="";
        try{
            cn=DriverManager.getConnection(url,user,password);
            return cn;
            
        }catch(Exception Ex){ return null;}
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CmbMois = new javax.swing.JComboBox();
        CmbAnnee = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        AfficherInventaire = new javax.swing.JButton();
        AfficherTous = new javax.swing.JLabel();
        AfficherParClient = new javax.swing.JLabel();
        CmbClient = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        Exportation = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab_InfosTotal = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recherche", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tempus Sans ITC", 1, 16), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setOpaque(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Année");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 83, 27));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Client");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 40, 80, 30));

        CmbMois.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel2.add(CmbMois, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, 130, 28));

        CmbAnnee.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel2.add(CmbAnnee, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 110, 26));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Mois");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 69, 28));

        AfficherInventaire.setBackground(new java.awt.Color(255, 255, 255));
        AfficherInventaire.setFont(new java.awt.Font("Tempus Sans ITC", 1, 16)); // NOI18N
        AfficherInventaire.setForeground(new java.awt.Color(255, 255, 255));
        AfficherInventaire.setText("Chercher");
        AfficherInventaire.setOpaque(false);
        AfficherInventaire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AfficherInventaireActionPerformed(evt);
            }
        });
        jPanel2.add(AfficherInventaire, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 150, -1));

        AfficherTous.setFont(new java.awt.Font("Tempus Sans ITC", 1, 16)); // NOI18N
        AfficherTous.setForeground(new java.awt.Color(255, 255, 255));
        AfficherTous.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImageProjet/icons8-cbs-35.png"))); // NOI18N
        AfficherTous.setText("Afficher tous");
        AfficherTous.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AfficherTousMousePressed(evt);
            }
        });
        jPanel2.add(AfficherTous, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 40, 150, 30));

        AfficherParClient.setFont(new java.awt.Font("Tempus Sans ITC", 1, 16)); // NOI18N
        AfficherParClient.setForeground(new java.awt.Color(255, 255, 255));
        AfficherParClient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImageProjet/icons8-search-35.png"))); // NOI18N
        AfficherParClient.setText("Afficher");
        AfficherParClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AfficherParClientMousePressed(evt);
            }
        });
        jPanel2.add(AfficherParClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 40, 120, 30));

        CmbClient.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel2.add(CmbClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 40, 190, 30));

        jLabel5.setFont(new java.awt.Font("Tempus Sans ITC", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImageProjet/icons8-broom-35.png"))); // NOI18N
        jLabel5.setText("Vider");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel5MousePressed(evt);
            }
        });
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 40, 90, 30));

        Exportation.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        Exportation.setForeground(new java.awt.Color(255, 255, 255));
        Exportation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImageProjet/icons8-print-35.png"))); // NOI18N
        Exportation.setText("Exporter");
        Exportation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ExportationMousePressed(evt);
            }
        });
        jPanel2.add(Exportation, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 30, 120, 50));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 23, 1310, 100));

        tab_InfosTotal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Réference", "Designation", "Stock", "Fournisseur", "Quantité stockée", "Quantité demandée", "Prix", "Remise", "Somme", "Nom client", "Type client", "ID facture", "Etat"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tab_InfosTotal);
        tab_InfosTotal.setRowHeight (25);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 1340, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImageProjet/bg-5-full.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, -1, 1380, 610));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AfficherInventaireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AfficherInventaireActionPerformed
        Connection cn;
        PreparedStatement ps;
        ResultSet rs;
        ArrayList<Vente> listVente = new ArrayList<>();
        cn = connecter();

        try {
            if (cn == null) {
                JOptionPane.showMessageDialog(this, "Pas de connexion");
            } else {
                int valeur = (CmbMois.getSelectedIndex() + 1);
                ps = cn.prepareStatement("SELECT distinct reference,designationV,stock,fournisseur,qteProduitStock,qte,prixVente,remise,c.nomClient,v.nomClient,v.idFactureClient,libelleEtat from vente v,client c, stock s, factureClient f, etatVente e, Administration a,laboratoires l , departements d ,`formation continue` fc ,produit p where s.idStock=p.idStock and v.idProduit=p.idProduit and v.idClient=c.idClient and p.idProduit=v.idProduit and v.idEtat=e.idEtat and f.idFactureClient=v.idFactureClient and year(dateFactureC)=" + CmbAnnee.getSelectedItem().toString() + " and MONTH(dateFactureC)=" + valeur);
                rs = ps.executeQuery();
                while (rs.next()) {
                    int prix = (int) rs.getDouble("prixVente");
                    int qte = rs.getInt("qte");
                    double somme = prix * qte;
                    Vente v = new Vente(rs.getString("reference"), rs.getString("designationV"), rs.getString("stock"), rs.getString("fournisseur"), rs.getInt("qteProduitStock"), qte, prix, rs.getInt("remise"), somme, rs.getString("v.nomClient"), rs.getString("c.nomClient"), rs.getInt("idFactureClient"), rs.getString("libelleEtat"));
                    listVente.add(v);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "il y a rien cette anneé ");
        }
        DefaultTableModel model = (DefaultTableModel) tab_InfosTotal.getModel();
        Object[] row = new Object[14];
        for (int i = 0; i < listVente.size(); i++) {
            row[0] = listVente.get(i).getReference();
            row[1] = listVente.get(i).getDesignation();
            row[2] = listVente.get(i).getStock();
            row[3] = listVente.get(i).getFournisseur();
            row[4] = listVente.get(i).getNbrProduit();
            row[5] = listVente.get(i).getQte();
            row[6] = listVente.get(i).getPrixVente();
            row[7] = listVente.get(i).getRemise();
            row[8] = listVente.get(i).getSomme();
            row[9] = listVente.get(i).getNomClient();
            row[10] = listVente.get(i).getTypeClient();
            row[11] = listVente.get(i).getIdFacture();
            row[12] = listVente.get(i).getEtat();
            model.addRow(row);
        }
    }//GEN-LAST:event_AfficherInventaireActionPerformed

    private void AfficherTousMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AfficherTousMousePressed
        Connection cn;
        PreparedStatement ps;
        ResultSet rs;
        ArrayList<Vente> listVente =new ArrayList<>();
        cn=connecter();

        try{
            if (cn==null){
                JOptionPane.showMessageDialog(this, "Pas de connexion");}
            else
            {
                ps=cn.prepareStatement("SELECT distinct reference,designationV,stock,fournisseur,qteProduitStock,qte,prixVente,remise,c.nomClient,v.nomClient,v.idFactureClient,libelleEtat from vente v,client c, stock s, factureClient f, etatVente e, Administration a,laboratoires l , departements d ,`formation continue` fc ,produit p where s.idStock=p.idStock and v.idProduit=p.idProduit and v.idClient=c.idClient and p.idProduit=v.idProduit and v.idEtat=e.idEtat and f.idFactureClient=v.idFactureClient ");
                rs=ps.executeQuery();
                while(rs.next())
                {
                    int prix=(int) rs.getDouble("prixVente");
                    int qte=rs.getInt("qte");
                    double somme =prix*qte;
                    Vente v = new Vente(rs.getString("reference"),rs.getString("designationV"),rs.getString("stock"),rs.getString("fournisseur"),rs.getInt("qteProduitStock"),qte,prix,rs.getInt("remise"),somme,rs.getString("v.nomClient"),rs.getString("c.nomClient"),rs.getInt("idFactureClient"),rs.getString("libelleEtat"));
                    listVente.add(v);
                }
            }
        }catch(Exception e)
        {JOptionPane.showMessageDialog(this, e);
        }
        DefaultTableModel model=(DefaultTableModel) tab_InfosTotal.getModel();
        Object[] row = new Object[14];
        for(int i=0;i<listVente.size();i++)
        {
            row[0]=listVente.get(i).getReference();
            row[1]=listVente.get(i).getDesignation();
            row[2]=listVente.get(i).getStock();
            row[3]=listVente.get(i).getFournisseur();
            row[4]=listVente.get(i).getNbrProduit();
            row[5]=listVente.get(i).getQte();
            row[6]=listVente.get(i).getPrixVente();
            row[7]=listVente.get(i).getRemise();
            row[8]=listVente.get(i).getSomme();
            row[9]=listVente.get(i).getNomClient();
            row[10]=listVente.get(i).getTypeClient();
            row[11]=listVente.get(i).getIdFacture();
            row[12]=listVente.get(i).getEtat();
            model.addRow(row);
        }        
    }//GEN-LAST:event_AfficherTousMousePressed

    private void AfficherParClientMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AfficherParClientMousePressed
        Connection cn;
        PreparedStatement ps;
        ResultSet rs;
        ArrayList<Vente> listVente =new ArrayList<>();
        cn=connecter();

        try{
            if (cn==null){
                JOptionPane.showMessageDialog(this, "Pas de connexion");}
            else
            {
                String client=CmbClient.getSelectedItem().toString();
                ps=cn.prepareStatement("SELECT distinct reference,designationV,stock,fournisseur,qteProduitStock,qte,prixVente,remise,c.nomClient,v.nomClient,v.idFactureClient,libelleEtat from vente v,client c, stock s, factureClient f, etatVente e, Administration a,laboratoires l , departements d ,`formation continue` fc ,produit p where s.idStock=p.idStock and v.idProduit=p.idProduit and v.idClient=c.idClient and p.idProduit=v.idProduit and v.idEtat=e.idEtat and f.idFactureClient=v.idFactureClient and c.nomClient=?");
                ps.setString(1, client);
                rs=ps.executeQuery();
                while(rs.next())
                {
                    int prix=(int) rs.getDouble("prixVente");
                    int qte=rs.getInt("qte");
                    double somme =prix*qte;
                    Vente v = new Vente(rs.getString("reference"),rs.getString("designationV"),rs.getString("stock"),rs.getString("fournisseur"),rs.getInt("qteProduitStock"),qte,prix,rs.getInt("remise"),somme,rs.getString("v.nomClient"),rs.getString("c.nomClient"),rs.getInt("idFactureClient"),rs.getString("libelleEtat"));
                    listVente.add(v);
                }
            }
        }catch(Exception e)
        {JOptionPane.showMessageDialog(this, e);
        }
        DefaultTableModel model=(DefaultTableModel) tab_InfosTotal.getModel();
        Object[] row = new Object[14];
        for(int i=0;i<listVente.size();i++)
        {
            row[0]=listVente.get(i).getReference();
            row[1]=listVente.get(i).getDesignation();
            row[2]=listVente.get(i).getStock();
            row[3]=listVente.get(i).getFournisseur();
            row[4]=listVente.get(i).getNbrProduit();
            row[5]=listVente.get(i).getQte();
            row[6]=listVente.get(i).getPrixVente();
            row[7]=listVente.get(i).getRemise();
            row[8]=listVente.get(i).getSomme();
            row[9]=listVente.get(i).getNomClient();
            row[10]=listVente.get(i).getTypeClient();
            row[11]=listVente.get(i).getIdFacture();
            row[12]=listVente.get(i).getEtat();
            model.addRow(row);
        }         
    }//GEN-LAST:event_AfficherParClientMousePressed

    private void jLabel5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MousePressed
                 DefaultTableModel model =(DefaultTableModel) tab_InfosTotal.getModel();
                 model.setRowCount(0);
    }//GEN-LAST:event_jLabel5MousePressed

    private void ExportationMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExportationMousePressed
        Exportation ex= new Exportation();
        ex.setVisible(true);
    }//GEN-LAST:event_ExportationMousePressed
    
    public void RemplirCmbMois()
    {
     CmbMois.addItem("Janvier");
     CmbMois.addItem("Février");
     CmbMois.addItem("Mars");
     CmbMois.addItem("Avril");
     CmbMois.addItem("Mai");
     CmbMois.addItem("Juin");
     CmbMois.addItem("Juillet");
     CmbMois.addItem("Aout");
     CmbMois.addItem("Septembre");
     CmbMois.addItem("Octobre");
     CmbMois.addItem("Novembre");
     CmbMois.addItem("Décembre");
    }
    
    public void RemplirCmbAnnée()
    {
     for(int i=2009;i<=2020;i++)
     {    
     CmbAnnee.addItem(i);
     }
    }
    
    public void RemplirComboIDClient() {
        Connection cn;
        PreparedStatement ps;
        cn = connecter();
        try {
            if (cn == null) {
                JOptionPane.showMessageDialog(this, "Pas de connexion");
            } else {
                ps = cn.prepareStatement("select * from client");
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    CmbClient.addItem(rs.getString("nomClient"));
                }
            }

        } catch (Exception Ex) {
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventaire().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AfficherInventaire;
    private javax.swing.JLabel AfficherParClient;
    private javax.swing.JLabel AfficherTous;
    private javax.swing.JComboBox CmbAnnee;
    private javax.swing.JComboBox CmbClient;
    private javax.swing.JComboBox CmbMois;
    private javax.swing.JLabel Exportation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tab_InfosTotal;
    // End of variables declaration//GEN-END:variables
}
